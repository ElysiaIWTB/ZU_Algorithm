// 2_14_装箱问题.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//假设有N项物品，大小分别为s1、s​2、…、s​i、…、s​N，其中si为满足1≤s​i ≤100的整数。要把这些物品装入到容量为100的一批箱子（序号1 - N）中。装箱方法是：对每项物品, 顺序扫描箱子，把该物品放入足以能够容下它的第一个箱子中。请写一个程序模拟这种装箱过程，并输出每个物品所在的箱子序号，以及放置全部物品所需的箱子数目。

//输入格式：输入第一行给出物品个数N（≤1000）；第二行给出N个正整数s​i（1≤si≤100，表示第i项物品的大小）。
//输出格式：按照输入顺序输出每个物品的大小及其所在的箱子序号，每个物品占1行，最后一行输出所需的箱子数目。
//输入样例：
//8
//60 70 80 90 30 40 10 20
//输出样例：
//60 1
//70 2
//80 3
//90 4
//30 1
//40 5
//10 1
//20 2
//5

#include <iostream>

int main()
{
    int N;
    scanf("%d", &N);
    int box[N];
    for (int j = 0; j < N; j++)
    {
        box[j] = 0;
    }
    int s[N][2];
    for (int i = 0; i < N; i++)
    {
        scanf("%d", &s[i][0]);
        for (int j = 0; j < N; j++)
        {
            if (box[j] + s[i][0] <= 100) {
                box[j] += s[i][0];
                s[i][1] = j + 1;
                printf("%d %d\n", s[i][0], s[i][1]);
                break;
            }
        }
    }
    for (int j = 0; j < N; j++)
    {
        if (box[j] == 0) {
            printf("%d", j);
            return 0;
        }
    }
    printf("%d", N);
    return 0;
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
